#include <stdio.h>
#include <ctype.h>
#include <locale.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>

void printmapa();
int checkfronteira(char pais_check, char pais_front);
void sorteio_paises(char j1[], char j2[]);
void muda_paises(char paisesj1[], char paisesj2[]);
void jogador_nome();
void sorteio_dados( int atk[], int dsf[], int t1, int t2);
void soma_tropasmapa();
void troca_pais(char paisganha[], char paisperde[],char pais);
void add_tropas(char paisesjog[],  int numtropas);
int vezdojogador_sorteio();
void vezdojogador();
void realocatropas(char paisg[],char paisp[], int ind_A, int ind_D);
void printrodada();

char nome_jogador1[50], nome_jogador2[50];

char p1[20] = {};

char p2[20] = {};

int tropastotais[20] = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};

int vez = 0;
int rodada = 1;

char mapa[17][74] =  {{"_________________________________________________________________________"},
					  {"|**#####                                                              **|"},
			          {"|  #000#******************#####     #####*********##########          * |"},
			          {"|  #-A-#                  #000#     #000#         #000##000# #####***** |"},
			          {"|##### #####             *#-F-#######-G-#         #-M-##-N-#*#000#      |"},
			          {"|#000# #000#**************     #000#                   ##### #-O-#      |"},
			          {"|#-B-# #-C-#                   #-H-#                   #000#    #####   |"},
			          {"|   #####                         #####                #-P-#    #000#   |"},
			          {"|   #000#                        *#000#              #####      #-Q-#   |"},
			          {"|   #-D-#                        *#-I-#              #000#         *    |"},
			          {"|      #####                     *                   #-R-#         *    |"},
			          {"|      #000#                   ***                    #####        #####|"},
			          {"|      #-E-#*********      #####                      #000#        #000#|"},
			          {"|                   **######000######*****************#-S-#        #-T-#|"},
			          {"|                     #000##-K-##000#                     ***********   |"},
			          {"|                     #-J-#     #-L-#                                   |"},
					  {"|_______________________________________________________________________|"}};
					  
void printmapainicial(){
	int i,j;
	for (i=0;i<17;i++){
		printf("\t");
		for (j=0;j<74;j++){
			printf("%c", mapa[i][j]);
			Sleep(5);
		}
		printf("\n");
	}
	Sleep(1000);
}				

void printrodada(){
	char string[76] ={"\t                                                                         \n"};
	char rod[10] ={"RODADA "};
	int u, d, aux, i=0;
	char num[3] = "  ";
	d=((rodada%100)/10) + 48;
	u=(rodada%10) + 48;
	if((int)num[1]!=  u){
	num[1] = (char)u; 
	}
	if((int)num[0]!= d){
	num[0] = (char)d;
	}
	num[2] = ' ';
	num[3] = 'a';
	strcat(rod,num);
	rod[strlen(rod)-1] = '\0';
	for(aux=0;aux<76;aux++){
		if(aux<(38-(strlen(rod)/2))){
			printf("%c", string[aux]);
		}
		else if(aux>=38-(strlen(rod)/2) && aux<(38-(strlen(rod)/2) + (strlen(rod)))){
			printf("%c",rod[i]);
			i++;
		}
		else{
			printf("%c", string[aux]);
		}
	}
}

void printmapa(){
	int i,j;
	system("cls");
	printrodada();
	soma_tropasmapa();

	printf("\tJogador A: %s\t X \t Jogador B: %s\n",nome_jogador1, nome_jogador2);		      
	for (i=0;i<17;i++){
		printf("\t");
		for (j=0;j<74;j++){
			printf("%c", mapa[i][j]);
		}
		printf("\n");
	}
	vezdojogador();
}

void muda_paises(char paisesj1[], char paisesj2[]){
	int x, y;
	
	for(x=0;x<strlen(paisesj1);x++){
		switch(paisesj1[x]){
			case('a'):{
				mapa[1][5]='A';
				break;
			}
			case('b'):{
				mapa[4][3]='A';
				break;
			}
			case('c'):{
				mapa[4][9]='A';
				break;
			}
			case('d'):{
				mapa[7][6]='A';
				break;
			}
			case('e'):{
				mapa[10][9]='A';
				break;
			}
			case('f'):{
				mapa[2][28]='A';
				break;
			}
			case('g'):{
				mapa[2][38]='A';
				break;
			}
			case('h'):{
				mapa[4][33]='A';
				break;
			}
			case('i'):{
				mapa[7][36]='A';
				break;
			}
			case('j'):{
				mapa[13][24]='A';
				break;
			}
			case('k'):{
				mapa[12][29]='A';
				break;
			}
			case('l'):{
				mapa[13][34]='A';
				break;
			}
			case('m'):{
				mapa[2][52]='A';
				break;
			}
			case('n'):{
				mapa[2][57]='A';
				break;
			}
			case('o'):{
				mapa[3][63]='A';
				break;
			}
			case('p'):{
				mapa[5][57]='A';
				break;
			}
			case('q'):{
				mapa[6][66]='A';
				break;
			}
			case('r'):{
				mapa[8][55]='A';
				break;
			}
			case('s'):{
				mapa[11][56]='A';
				break;
			}
			case('t'):{
				mapa[11][69]='A';
				break;
			}
			
		}
	}
	for(x=0;x<strlen(paisesj2);x++){
		switch(paisesj2[x]){
			case('a'):{
				mapa[1][5]='B';
				break;
			}
			case('b'):{
				mapa[4][3]='B';
				break;
			}
			case('c'):{
				mapa[4][9]='B';
				break;
			}
			case('d'):{
				mapa[7][6]='B';
				break;
			}
			case('e'):{
				mapa[10][9]='B';
				break;
			}
			case('f'):{
				mapa[2][28]='B';
				break;
			}
			case('g'):{
				mapa[2][38]='B';
				break;
			}
			case('h'):{
				mapa[4][33]='B';
				break;
			}
			case('i'):{
				mapa[7][36]='B';
				break;
			}
			case('j'):{
				mapa[13][24]='B';
				break;
			}
			case('k'):{
				mapa[12][29]='B';
				break;
			}
			case('l'):{
				mapa[13][34]='B';
				break;
			}
			case('m'):{
				mapa[2][52]='B';
				break;
			}
			case('n'):{
				mapa[2][57]='B';
				break;
			}
			case('o'):{
				mapa[3][63]='B';
				break;
			}
			case('p'):{
				mapa[5][57]='B';
				break;
			}
			case('q'):{
				mapa[6][66]='B';
				break;
			}
			case('r'):{
				mapa[8][55]='B';
				break;
			}
			case('s'):{
				mapa[11][56]='B';
				break;
			}
			case('t'):{
				mapa[11][69]='B';
				break;
			}
			
		}
	
	}
}

int checkfronteira(char pais_check, char pais_front){
	//nomeação de variaveis
	char conjunto_paises[7] = {};
	int i=0;
	
	//transformando as letras em minusculas
	pais_check = tolower(pais_check);
	pais_front = tolower(pais_front);
	switch(pais_check){
		//cada case checa o de acordo com o mapa se o pais tem fronteira ou não
		case ('a'):{
			strcpy(conjunto_paises,"bcfo");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;			
			break;
		}
		case ('b'):{
			strcpy(conjunto_paises,"acd");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('c'):{
			strcpy(conjunto_paises,"abdf");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('d'):{
			strcpy(conjunto_paises,"bce");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('e'):{
			strcpy(conjunto_paises,"dj");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('f'):{
			strcpy(conjunto_paises,"ach");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('g'):{
			strcpy(conjunto_paises,"hm");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('h'):{
			strcpy(conjunto_paises,"fgi");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('i'):{
			strcpy(conjunto_paises,"hk");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('j'):{
			strcpy(conjunto_paises,"ek");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('k'):{
			strcpy(conjunto_paises,"ijl");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('l'):{
			strcpy(conjunto_paises,"ks");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		case('m'):{
			strcpy(conjunto_paises,"gn");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
			case('n'):{
			strcpy(conjunto_paises,"mop");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
			case('o'):{
			strcpy(conjunto_paises,"anpq");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
			case('p'):{
			strcpy(conjunto_paises,"nor");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
			case('q'):{
			strcpy(conjunto_paises,"ot");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
			case('r'):{
			strcpy(conjunto_paises,"ps");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
			case('s'):{
			strcpy(conjunto_paises,"rlt");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
			case('t'):{
			strcpy(conjunto_paises,"sq");
			for(i=0;i<strlen(conjunto_paises); i++){
				if(pais_front== conjunto_paises[i]){
					return 1;
					break;
				}
			}
			return 0;
			break;
		}
		default:{
			return 2;
			break;
		}
	}
}

void sorteio_paises(char j1[], char j2[]){
	int x,i=0;
	int y,p1=0,p2=0;
	char jogo[21] = {"abcdefghijklmnopqrst"};
		
	for(i=0;i<20;i++){		
	y=rand()%2;
		
	if(y==0){
		j1[p1]=jogo[i];
		p1++;

	}
	if(y==1){
		j2[p2]=jogo[i];
		p2++;
	}	
	if(p1>=10){
		i++;
		for(i; i<20;i++){
			j2[p2]=jogo[i];
			p2++;
		}	
	}
	if(p2>=10){
		i++;
		for(i; i<20;i++){
			j1[p1]=jogo[i];
			p1++;
		}	
	}		
}	
	
}

void jogador_nome(){
	int y, i=0;
	
	printf("Jogador 1 digite seu nome de guerra: ");
	scanf(" %[^\n]s", &nome_jogador1);
	
	printf("Jogador 2 digite seu nome de guerra: ");
	scanf(" %[^\n]s", &nome_jogador2);
}

void sorteio_dados( int atk[], int dsf[], int t1, int t2){
	int x,y, aux;
	if(t1>=3){
		for(x=0;x<3;x++){
			atk[x] = 1+rand()%6;
		}
	}
	if(t1==2){
		for(x=0;x<2;x++){
			atk[x] = 1+rand()%6;
			atk[3] = '\0';
		}
	}
	if(t1==1){
		for(x=0;x<1;x++){
			atk[x] = 1+rand()%6;
			atk[2] = '\0';
			atk[3] = '\0';
		}
	}
	if(t2>=3){
		for(x=0;x<3;x++){
			dsf[x] = 1+rand()%6;
		}
	}
	if(t2==2){
		for(x=0;x<2;x++){
			dsf[x] = 1+rand()%6;
			dsf[2] = '\0';
		}
	}
	if(t2==1){
		for(x=0;x<1;x++){
			dsf[x] = 1+rand()%6;
			dsf[2] = '\0';
			dsf[1] = '\0';
		}
	}
	
	printf("Ataque\tDefesa\n");
	for(x=0;x<3;x++){
		for(y=0;y<3;y++){
			if(y>x){
				if(atk[x]<atk[y]){
					aux = atk[x];
					atk[x] = atk[y];
					atk[y] = aux;
				}
				if(dsf[x]<dsf[y]){
					aux = dsf[x];
					dsf[x] = dsf[y];
					dsf[y] = aux;
				}
			}
		}
	}	
}

void soma_tropasmapa(){
	int u, d, c;
									//0	// pais A
	c=(tropastotais[0]/100) + 48;
	d=((tropastotais[0]%100)/10) + 48;
	u=(tropastotais[0]%10) + 48;
	if((int)mapa[2][6]!=  u){
	mapa[2][6] = (char)u; 
	}
	if((int)mapa[2][5]!= d){
	mapa[2][5]= (char)d;
	}
	if((int)mapa[2][4]!= c){
	mapa[2][4]= (char)c;
	}
									//1	//pais B
	c=(tropastotais[1]/100) + 48;
	d=((tropastotais[1]%100)/10) + 48;
	u=(tropastotais[1]%10) + 48;
	if((int)mapa[5][4]!=  u){
	mapa[5][4] = (char)u; 
	}
	if((int)mapa[5][3]!= d){
	mapa[5][3]= (char)d;
	}
	if((int)mapa[5][2]!= c){
	mapa[5][2]= (char)c;
	}
									//2	//pais C
	c=(tropastotais[2]/100) + 48;
	d=((tropastotais[2]%100)/10) + 48;
	u=(tropastotais[2]%10) + 48;
	if((int)mapa[5][10]!=  u){
	mapa[5][10] = (char)u; 
	}
	if((int)mapa[5][9]!= d){
	mapa[5][9]= (char)d;
	}
	if((int)mapa[5][8]!= c){
	mapa[5][8]= (char)c;
	}
									//3	//pais D
	c=(tropastotais[3]/100) + 48;
	d=((tropastotais[3]%100)/10) + 48;
	u=(tropastotais[3]%10) + 48;
	if((int)mapa[8][7]!=  u){
	mapa[8][7] = (char)u; 
	}
	if((int)mapa[8][6]!= d){
	mapa[8][6]= (char)d;
	}
	if((int)mapa[8][5]!= c){
	mapa[8][5]= (char)c;
	}
									//4	//pais E
	c=(tropastotais[4]/100) + 48;
	d=((tropastotais[4]%100)/10) + 48;
	u=(tropastotais[4]%10) + 48;
	if((int)mapa[11][10]!=  u){
	mapa[11][10] = (char)u; 
	}
	if((int)mapa[11][9]!= d){
	mapa[11][9]= (char)d;
	}
	if((int)mapa[11][8]!= c){
	mapa[11][8]= (char)c;
	}
									//5	//pais F
	c=(tropastotais[5]/100) + 48;
	d=((tropastotais[5]%100)/10) + 48;
	u=(tropastotais[5]%10) + 48;
	if((int)mapa[3][29]!=  u){
	mapa[3][29] = (char)u; 
	}
	if((int)mapa[2][27]!= d){
	mapa[3][28]= (char)d;
	}
	if((int)mapa[2][26]!= c){
	mapa[3][27]= (char)c;
	}
									//6	//pais G
	c=(tropastotais[6]/100) + 48;
	d=((tropastotais[6]%100)/10) + 48;
	u=(tropastotais[6]%10) + 48;
	if((int)mapa[3][39]!=  u){
	mapa[3][39] = (char)u; 
	}
	if((int)mapa[3][38]!= d){
	mapa[3][38]= (char)d;
	}
	if((int)mapa[3][37]!= c){
	mapa[3][37]= (char)c;
	}
										//7	//pais H
	c=(tropastotais[7]/100) + 48;
	d=((tropastotais[7]%100)/10) + 48;
	u=(tropastotais[7]%10) + 48;
	if((int)mapa[5][34]!=  u){
	mapa[5][34] = (char)u; 
	}
	if((int)mapa[5][33]!= d){
	mapa[5][33]= (char)d;
	}
	if((int)mapa[5][32]!= c){
	mapa[5][32]= (char)c;
	}
											//8	//pais I
	c=(tropastotais[8]/100) + 48;
	d=((tropastotais[8]%100)/10) + 48;
	u=(tropastotais[8]%10) + 48;
	if((int)mapa[8][37]!=  u){
	mapa[8][37] = (char)u; 
	}
	if((int)mapa[8][36]!= d){
	mapa[8][36]= (char)d;
	}
	if((int)mapa[8][35]!= c){
	mapa[8][35]= (char)c;
	}
												//9	//pais J
	c=(tropastotais[9]/100) + 48;
	d=((tropastotais[9]%100)/10) + 48;
	u=(tropastotais[9]%10) + 48;
	if((int)mapa[14][25]!=  u){
	mapa[14][25] = (char)u; 
	}
	if((int)mapa[14][24]!= d){
	mapa[14][24]= (char)d;
	}
	if((int)mapa[14][23]!= c){
	mapa[14][23]= (char)c;
	}
													//10	//pais K
	c=(tropastotais[10]/100) + 48;
	d=((tropastotais[10]%100)/10) + 48;
	u=(tropastotais[10]%10) + 48;
	if((int)mapa[13][30]!=  u){
	mapa[13][30] = (char)u; 
	}
	if((int)mapa[13][29]!= d){
	mapa[13][29]= (char)d;
	}
	if((int)mapa[13][28]!= c){
	mapa[13][28] = (char)c;
	}
													//11	//pais L
	c=(tropastotais[11]/100) + 48;
	d=((tropastotais[11]%100)/10) + 48;
	u=(tropastotais[11]%10) + 48;
	if((int)mapa[14][35]!=  u){
	mapa[14][35] = (char)u; 
	}
	if((int)mapa[14][34]!= d){
	mapa[14][34]= (char)d;
	}
	if((int)mapa[14][33]!= c){
	mapa[14][33] = (char)c;
	}
													//12	//pais M
	c=(tropastotais[12]/100) + 48;
	d=((tropastotais[12]%100)/10) + 48;
	u=(tropastotais[12]%10) + 48;
	if((int)mapa[3][53]!=  u){
	mapa[3][53] = (char)u; 
	}
	if((int)mapa[3][52]!= d){
	mapa[3][52]= (char)d;
	}
	if((int)mapa[3][51]!= c){
	mapa[3][51] = (char)c;
	}
													//13	//pais N
	c=(tropastotais[13]/100) + 48;
	d=((tropastotais[13]%100)/10) + 48;
	u=(tropastotais[13]%10) + 48;
	if((int)mapa[3][58]!=  u){
	mapa[3][58] = (char)u; 
	}
	if((int)mapa[3][57]!= d){
	mapa[3][57]= (char)d;
	}
	if((int)mapa[3][56]!= c){
	mapa[3][56] = (char)c;
	}
													//14	//pais O
	c=(tropastotais[14]/100) + 48;
	d=((tropastotais[14]%100)/10) + 48;
	u=(tropastotais[14]%10) + 48;
	if((int)mapa[4][64]!=  u){
	mapa[4][64] = (char)u; 
	}
	if((int)mapa[4][63]!= d){
	mapa[4][63]= (char)d;
	}
	if((int)mapa[4][62]!= c){
	mapa[4][62] = (char)c;
	}
													//15	//pais P
	c=(tropastotais[15]/100) + 48;
	d=((tropastotais[15]%100)/10) + 48;
	u=(tropastotais[15]%10) + 48;
	if((int)mapa[6][58]!=  u){
	mapa[6][58] = (char)u; 
	}
	if((int)mapa[6][57]!= d){
	mapa[6][57]= (char)d;
	}
	if((int)mapa[6][56]!= c){
	mapa[6][56] = (char)c;
	}
													//16	//pais Q
	c=(tropastotais[16]/100) + 48;
	d=((tropastotais[16]%100)/10) + 48;
	u=(tropastotais[16]%10) + 48;
	if((int)mapa[7][67]!=  u){
	mapa[7][67] = (char)u; 
	}
	if((int)mapa[7][66]!= d){
	mapa[7][66]= (char)d;
	}
	if((int)mapa[7][65]!= c){
	mapa[7][65] = (char)c;
	}
													//17	//pais R
	c=(tropastotais[17]/100) + 48;
	d=((tropastotais[17]%100)/10) + 48;
	u=(tropastotais[17]%10) + 48;
	if((int)mapa[9][56]!=  u){
	mapa[9][56] = (char)u; 
	}
	if((int)mapa[9][55]!= d){
	mapa[9][55]= (char)d;
	}
	if((int)mapa[9][54]!= c){
	mapa[9][54] = (char)c;
	}
													//18	//pais S
	c=(tropastotais[18]/100) + 48;
	d=((tropastotais[18]%100)/10) + 48;
	u=(tropastotais[18]%10) + 48;
	if((int)mapa[12][57]!=  u){
	mapa[12][57] = (char)u; 
	}
	if((int)mapa[12][56]!= d){
	mapa[12][56]= (char)d;
	}
	if((int)mapa[12][55]!= c){
	mapa[12][55] = (char)c;
	}
													//19	//pais T
	c=(tropastotais[19]/100) + 48;
	d=((tropastotais[19]%100)/10) + 48;
	u=(tropastotais[19]%10) + 48;
	if((int)mapa[12][70]!=  u){
	mapa[12][70] = (char)u; 
	}
	if((int)mapa[12][69]!= d){
	mapa[12][69]= (char)d;
	}
	if((int)mapa[12][68]!= c){
	mapa[12][68] = (char)c;
	}
}

void troca_pais(char paisganha[], char paisperde[],char pais){
	int i, j;
	char aux;
	pais = tolower(pais);

	switch (pais){
		case 'a':
			strcat(paisganha,"a");
			break;
		case 'b':
			strcat(paisganha,"b");
			break;
		case 'c':
			strcat(paisganha,"c");
			break;
		case 'd':
			strcat(paisganha,"d");
			break;
		case 'e':
			strcat(paisganha,"e");
			break;
		case 'f':
			strcat(paisganha,"f");
			break;
		case 'g':
			strcat(paisganha,"g");
			break;
		case 'h':
			strcat(paisganha,"h");
			break;
		case 'i':
			strcat(paisganha,"i");
			break;
		case 'j':
			strcat(paisganha,"j");
			break;
		case 'k':
			strcat(paisganha,"k");
			break;
		case 'l':
			strcat(paisganha,"l");
			break;
		case 'm':
			strcat(paisganha,"m");
			break;
		case 'n':
			strcat(paisganha,"n");
			break;
		case 'o':
			strcat(paisganha,"o");
			break;
		case 'p':
			strcat(paisganha,"p");
			break;
		case 'q':
			strcat(paisganha,"q");
			break;	
		case 'r':
			strcat(paisganha,"r");
			break;	
		case 's':
			strcat(paisganha,"s");
			break;	
		case 't':
			strcat(paisganha,"t");
			break;
	}
	for(i=0;i<strlen(paisperde);i++){
		if (pais == paisperde[i]){
			paisperde[i] = 123;
			break;
		}
	}
	for(i=0;i<strlen(paisperde);i++){
		for(j=0;j<strlen(paisperde);j++){
			if(j>i){
				if(paisperde[i] > paisperde[j]){
					aux = paisperde[j];
					paisperde[j] = paisperde[i];
					paisperde[i] = aux;
				}
			}
		}
	}
	paisperde[strlen(paisperde) - 1] = '\0';
}

void add_tropas(char paisesjog[],  int numtropas){
       char paisestotais[21] = "abcdefghijklmnopqrst";
        char paisad;
	   int i=0, existe, tropasdistrib;
	while(numtropas > 0){
	   	printmapa();
	   	existe = 0;
	   	
		printf("você tem %d tropas, selecione um país:\n", numtropas);
	   	scanf(" %c", &paisad);
	   	paisad = tolower(paisad);
	   	
	   	for(i=0;i<20;i++){
	   		if(paisad == paisesjog[i]){
	   			existe = 1;
	   			break;
			   }
		}
	if(existe!=1){
				printf("Esse país não é seu ou não existe\n");
				Sleep(1000);
			}
	if(existe==1){
		printf("Selecione o número de tropas que vai adicionar nesse país:\n");
		scanf(" %d", &tropasdistrib);
		if(tropasdistrib > numtropas){
			printf("Não é possível fazer a operação, você tem menos tropas que %d\n", tropasdistrib);
			Sleep(1000);
		}
		else if(tropasdistrib <= 0){
			printf("Número menor que zero, número de tropas inexistente\n");
			Sleep(1000);
		}
		else{
			for(i=0;i<20;i++){
				if(paisad == paisestotais[i]){
					break;
				}
			}
		tropastotais[i] += tropasdistrib;
		numtropas -= tropasdistrib;
		}
	}	
   } 	
	
}

int vezdojogador_sorteio(){
	int y;
	
	y=rand()%2;
	if(y==0){
		return 1;
	}
	else{
		return 2;
	}
}

void vezdojogador(){
	if(vez%2==0){
		printf("Vez do jogador: %s\n", nome_jogador1);
	}
	else{
		printf("Vez do jogador: %s\n", nome_jogador2);
	}
	
}

int check_pais(char pais_ataque, char pj1[]){
			int i;
			for(i=0;i<strlen(pj1);i++){
	   			if(pais_ataque == pj1[i])
			   		return 1;
	   	}
	   	return 0;
}

void ataque(char paisJatk[], char paisJdfs[]){
	char pais_ataque = '1', pais_defesa;
	int check=0, i=0, j=0, aux=0;
	int checkatk = 0, checkdfs = 0;
	char paisesjog[] =  "abcdefghijklmnopqrst";
	
	
	while(pais_ataque != '0'){
		muda_paises(p1,p2);
		soma_tropasmapa();
		printmapa();
		printf("Escolha o país a atacar ou 0 para pular o ataque: \n");
		scanf(" %c", &pais_ataque);
		pais_ataque = tolower(pais_ataque);
		checkatk = check_pais(pais_ataque, paisJatk);
		
		if(checkatk==1){
	
			printf("Escolha o pais alvo: \n");
			scanf(" %c", &pais_defesa);
			pais_defesa = tolower(pais_defesa);
			checkdfs = check_pais(pais_defesa, paisJdfs);
			
			if(checkdfs==1){
				check = checkfronteira(pais_ataque, pais_defesa);
				
				if(check==1){
					for(i=0;i<strlen(paisesjog);i++){
		   				if(pais_ataque == paisesjog[i])break;
				   	}
				   	for(j=0;j<strlen(paisesjog);j++){
				   		if(pais_defesa == paisesjog[j])break;
					}
					int dadosatk[3] = {0,0,0};
					int dadosdfs[3] = {0,0,0};
					if(tropastotais[i] - 1 >= 1 ){
						sorteio_dados(dadosatk, dadosdfs,(tropastotais[i] - 1), tropastotais[j]);
						for(aux=0;aux<3;aux++){
							if(dadosatk[aux] > 0 && dadosdfs[aux] > 0){
								printf("%d\t%d\t",dadosatk[aux],dadosdfs[aux]);
								if(dadosdfs[aux]< dadosatk[aux]){
									printf("Ataque ganha!\n");
								}
								else if(dadosdfs[aux]== dadosatk[aux]){
									printf("Empate! Defesa ganha!\n");
								}
								else{
									printf("Defesa ganha!\n");
								}
							}
						}
						for(aux = 0; aux< 3 ; aux++){
							if(dadosatk[aux] > 0 && dadosdfs[aux] > 0){
								if(dadosdfs[aux]< dadosatk[aux]){
									tropastotais[j]-=1;
									}
								else{
									tropastotais[i]-=1;
								}
							}
						}
						Sleep(2000);
						if(tropastotais[j]<=0){
							realocatropas(paisJatk, paisJdfs,i,j);
							}
					}
					else{
						printf("Número insuficiente de tropas para realizar o ataque\n");
						Sleep(2000);
					}
				}	
				else{
					printf("Esses países não fazem fronteira\n");
					Sleep(2000);
				}
			}
			else{
				printf("Você não pode atacar esse país\n");
				Sleep(2000);
			}
		}
		else if(checkatk != 0){
			printf("Esse país não te pertence ou não existe\n");
			Sleep(2000);
		}
	}
}
	
void realocatropas(char paisg[],char paisp[], int ind_A, int ind_D){
	char paises[] =  "abcdefghijklmnopqrst";
	int trop = 1, tropastot;
	tropastot = tropastotais[ind_A] - 1;
	troca_pais(paisg,paisp, paises[ind_D]);
	muda_paises(p1, p2);
	tropastotais[ind_D] = 0;
	while(trop!=0){
		printmapa();
		
		printf("Parabéns! Você conquistou o país %c\n", paises[ind_D]);
		printf(" Você tem %d tropas disponíveis\n", tropastot );
		printf("Selecione o número de tropas para realocar para aquele país ou 0 para continuar\n");
		scanf(" %d", &trop);
		
		if(trop==0){
			if(tropastotais[ind_D] <= 0){
				printf("Você não pode deixar o país desprotegido!\n");
				Sleep(2000);
				trop = 1;
			}
		}
		if(trop > tropastot || trop < 0 && trop != 0){
			printf("Número de tropas inválido\n");
			Sleep(2000);
		}
		else{
			if(tropastotais[ind_D] <= 0 ){
				tropastotais[ind_D] = trop;
			}
			else{
				tropastotais[ind_D] += trop;
			}
			tropastot -=trop;
			tropastotais[ind_A] -=trop;
		}
		if(tropastot<=0){
		break;
		}
	}
}
